<?php
/**
 * @copyright  Copyright (c) 2017, Net Inventors GmbH
 * @category   Shopware
 * @author     dpogodda
 */

namespace NetiTags;

use NetiTags\CompilerPass\Relations;
use Shopware\Components\Plugin;
use Shopware\Components\Plugin\Context\ActivateContext;
use Shopware\Components\Plugin\Context\DeactivateContext;
use Shopware\Components\Plugin\Context\InstallContext;
use Shopware\Components\Plugin\Context\UninstallContext;
use Shopware\Components\Plugin\Context\UpdateContext;
use Symfony\Component\DependencyInjection\ContainerBuilder;

/**
 * Class NetiTags
 *
 * @package NetiTags
 */
class NetiTags extends Plugin
{
    /**
     * @param ContainerBuilder $container
     */
    public function build(ContainerBuilder $container)
    {
        parent::build($container);

        $container->addCompilerPass(new Relations());
    }

    /**
     * @param InstallContext $context
     */
    public function install(InstallContext $context)
    {
        parent::install($context);

        try {
            $articleRelationService = $this->container->get('neti_tags.service.tag.relations.article');
            $this->container->get('neti_tags.service.table_registry')->register(
                $articleRelationService->getName(),
                $articleRelationService->getTableName(),
                $context->getPlugin()
            );
        } catch (\Exception $e) {

        }

        try {
            $customerRelationService = $this->container->get('neti_tags.service.tag.relations.customer');
            $this->container->get('neti_tags.service.table_registry')->register(
                $customerRelationService->getName(),
                $customerRelationService->getTableName(),
                $context->getPlugin()
            );
        } catch (\Exception $e) {

        }
        try {
            $customerRelationService = $this->container->get('neti_tags.service.tag.relations.blog');
            $this->container->get('neti_tags.service.table_registry')->register(
                $customerRelationService->getName(),
                $customerRelationService->getTableName(),
                $context->getPlugin()
            );
        } catch (\Exception $e) {

        }

        try {
            $customerRelationService = $this->container->get('neti_tags.service.tag.relations.cms');
            $this->container->get('neti_tags.service.table_registry')->register(
                $customerRelationService->getName(),
                $customerRelationService->getTableName(),
                $context->getPlugin()
            );
        } catch (\Exception $e) {

        }
    }

    /**
     * @param UpdateContext $context
     */
    public function update(UpdateContext $context)
    {
        parent::update($context);

        try {
            $articleRelationService = $this->container->get('neti_tags.service.tag.relations.article');
            $this->container->get('neti_tags.service.table_registry')->register(
                $articleRelationService->getName(),
                $articleRelationService->getTableName(),
                $context->getPlugin()
            );
        } catch (\Exception $e) {

        }

        try {
            $customerRelationService = $this->container->get('neti_tags.service.tag.relations.customer');
            $this->container->get('neti_tags.service.table_registry')->register(
                $customerRelationService->getName(),
                $customerRelationService->getTableName(),
                $context->getPlugin()
            );
        } catch (\Exception $e) {

        }
    }

    /**
     * @param UninstallContext $context
     */
    public function uninstall(UninstallContext $context)
    {
        parent::uninstall($context); // TODO: Change the autogenerated stub
    }

}
